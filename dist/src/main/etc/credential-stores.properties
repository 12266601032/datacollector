#
# Copyright 2017 StreamSets Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# CredentialStores configuration, this file is included by sdc.properties

# Defines the available Credential Stores IDs. If defining multiple, the IDs must be separated by comma
#credentialStores=jks,vault

###############################################
# Java KeyStore CredentialStore Configuration #
###############################################

# Defines the implementation of the 'jks' Credential Store
# The format of the property name is: credentialStore.<ID>.def
# The format of the value is:  <STAGE_LIB_NAME>::<CREDENTIAL_STORE_NAME>
# For other Credential Store replace 'jks' with the corresponding ID
credentialStore.jks.def=streamsets-datacollector-jks-credentialstore-lib::com_streamsets_datacollector_credential_javakeystore_JavaKeyStoreCredentialStore

# Defines the configuration properties of the 'jks' Credential Store
# The format of the property names is: credentialStore.<ID>.config.<CONFIG_NAME>
# For other Credential Store replace 'jks' with the corresponding ID
# The <CONFIG_NAME> are specific to each credential store implementation

# A Java Keystore Credential store can be of type JCEKS or PKCS12
credentialStore.jks.config.keystore.type=PKCS12

# The location a name of the Java Keystore. If the specified path is relative, it is assumed it is within the SDC
# configuration directory 'etc/'. Otherwise the absolute location is assumed.
credentialStore.jks.config.keystore.file=jks-credentialStore.pkcs12

# The password to be able to read the the Java Keystore
credentialStore.jks.config.keystore.storePassword=changeIt

#################################################
# Hashicorp Vault CredentialStore Configuration #
#################################################

# Defines the implementation of the 'vault' Credential Store
# The format of the property name is: credentialStore.<ID>.def
# The format of the value is:  <STAGE_LIB_NAME>::<CREDENTIAL_STORE_NAME>
# For other Credential Store replace 'vault' with the corresponding ID
 credentialStore.vault.def=streamsets-datacollector-vault-credentialstore-lib::com_streamsets_datacollector_credential_vault_VaultCredentialStore

# Vault path-key separator for the name parameter in the credential:get EL function
 credentialStore.vault.config.pathKey.separator=&

# URL of the vault server to connect to
 credentialStore.vault.config.addr=http://localhost:8200

# AppRole mode (recommended) #

 credentialStore.vault.config.role.id=
 credentialStore.vault.config.secret.id=${file("vault-secret-id")}

# App ID mode (deprecated) #

#
# The Vault User ID is generated by hashing the MAC address belonging to the network interface assigned
# the IP address of hostname -f. It can also be retrieved by the show-vault-id command of the
# streamsets executable.
#

# SDC authenticates with Vault using the AppId authentication back-end. The app-id must be specified below.
# credentialStore.vault.config.app.id=

# Optional Settings #

# The renewal interval must be shorter than the shortest lease issued by Vault including auth tokens.
 credentialStore.vault.config.lease.renewal.interval.sec=60
 credentialStore.vault.config.lease.expiration.buffer.sec=120
 credentialStore.vault.config.open.timeout=0
 credentialStore.vault.config.proxy.address=
 credentialStore.vault.config.proxy.port=8080
 credentialStore.vault.config.proxy.username=
 credentialStore.vault.config.proxy.password=
 credentialStore.vault.config.read.timeout=0
 credentialStore.vault.config.ssl.enabled.protocols=TLSv1.2,TLSv1.3
 credentialStore.vault.config.ssl.truststore.file=
 credentialStore.vault.config.ssl.truststore.password=
 credentialStore.vault.config.ssl.verify=true
 credentialStore.vault.config.ssl.timeout=0
 credentialStore.vault.config.timeout=0