<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_vdk_xjb_wr">
 <title>Defining Grok Patterns</title>
 <shortdesc>You can use the grok patterns in this appendix to define the structure of log
        data.</shortdesc>
    <conbody>
        <p><indexterm>grok patterns<indexterm>defining</indexterm></indexterm>You can use a single
            pattern or string together several patterns to define a larger pattern. You can also use
            valid sections of patterns to define a custom pattern, and create aliases to represent
            patterns.</p>
        <p>When you define grok patterns in a <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/>
            stage, you configure the following properties:<dl>
                <dlentry>
                    <dt>Grok Pattern Definition</dt>
                    <dd>Use to define a complex or custom grok pattern. You can use this property to
                        define an alias for a single grok pattern or to define multiple aliases for
                        use within a larger pattern.</dd>
                    <dd>When configuring the pattern definition, state the alias name, and then the
                        pattern description as
                        follows:<codeblock>&lt;ALIASNAME> &lt;grok pattern>
&lt;ALIASNAME2> &lt;grok pattern></codeblock></dd>
                    <dd>The following example defines several aliases, MYHOSTTIMESTAMP,
                        MYCUSTOMPATTERN which expands upon MYHOSTTIMESTAMP, and
                        DURATIONLOG:<codeblock>MYHOSTTIMESTAMP %{CISCOTIMESTAMP:timestamp} %{HOST:host}
MYCUSTOMPATTERN %{MYHOSTTIMESTAMP} %{WORD:program}%{NOTSPACE} %{NOTSPACE}
DURATIONLOG %{NUMBER:duration}%{NOTSPACE} %{GREEDYDATA:kernel_logs}</codeblock></dd>
                </dlentry>
                <dlentry>
                    <dt>Grok Pattern</dt>
                    <dd>Use to define the actual grok pattern used to evaluate data. You can enter a
                        simple grok pattern, such as %{COMMONAPACHELOG}. Or, to define a complex
                        grok pattern, you can use the patterns listed in this appendix or the
                        aliases that you defined in Grok Pattern Description.</dd>
                    <dd>For example, after defining the aliases above in the Grok Pattern
                        Description field, you can use the aliases to configure Grok Pattern as
                        follows:<codeblock>%{MYCUSTOMPATTERN} %{DURATIONLOG}</codeblock></dd>
                </dlentry>
            </dl></p>
        <p>The following image shows the configuration example in the UI: </p>
        <p><image href="../Graphics/GrokProperties.png" id="image_qfw_lp3_h5" scale="60"/></p>
    </conbody>
</concept>
