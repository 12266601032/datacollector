<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_wnv_25j_ks">
 <title>Regular Expressions in the Pipeline</title>
 <shortdesc>Though generally not required, you can use Java-based regular expressions at various
  locations within a pipeline to define, search for, or manipulate strings. </shortdesc>
 <conbody>
  <p><indexterm>regular expressions<indexterm>in the pipeline</indexterm></indexterm>For example, in
   the Field Masker processor, you can use a fixed length, variable length, or custom static mask to
   mask data in a field. When that doesn't work for you, you can use a regular expression to define
   a specific custom mask. Similarly, you can use a regular expression to define the format of a log
   line if it does not use one of the listed formats. </p>
  <p>The following table describes the ways you can use a regular expression in the pipeline:<table
    frame="all" rowsep="1" colsep="1" id="table_dtb_35j_ks">
    <tgroup cols="2">
     <colspec colname="c1" colnum="1" colwidth="1*"/>
     <colspec colname="c2" colnum="2" colwidth="3.08*"/>
     <thead>
      <row>
       <entry>Location</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Directory origin</entry>
       <entry>Optionally use to define the pattern of the file name.</entry>
      </row>
      <row>
       <entry>File Tail origin</entry>
       <entry>Use to define the ${PATTERN} constant when you use the Files Matching a Pattern naming
        option. <p>Use to define the structure of a log line or text.</p></entry>
      </row>
      <row>
       <entry>Origins that process log data<p>Log Parser processor</p></entry>
       <entry>Optionally use to define the pattern of the log line.</entry>
      </row>
      <row>
       <entry>Field Masker processor</entry>
       <entry>Optionally use to define the field mask.</entry>
      </row>
      <row>
       <entry>regexCapture function</entry>
       <entry>Use to define the groups and pattern of the string so you can specify the group to
        return.</entry>
      </row>
      <row>
       <entry>replaceAll function</entry>
       <entry>Use to define the string to replace.</entry>
      </row>
     </tbody>
    </tgroup>
   </table></p>
 </conbody>
</concept>
