<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_rfd_15l_dy">
 <title>Generated Records</title>
 <shortdesc>The MySQL Binary Log origin generates one record for each transaction recorded in the
        binary logs. The record includes fields and record header attributes that contain the
        operation type, change data capture information, and the changed data.</shortdesc>
 <conbody>
        <note>If a transaction recorded in the binary logs is rolled back in the MySQL database,
            MySQL retains the original transaction in the log and then also records the rolled back
            transaction. As a result, the MySQL Binary Log origin can process the changes recorded
            in the original transaction and in the rolled back transaction. </note>
        <p><indexterm>MySQL Binary Log origin<indexterm>generated
            records</indexterm></indexterm>Each generated record includes the following
            information:</p>
        <dl>
            <dlentry>
                <dt>Operation type</dt>
                <dd>The operation type is stored in the Type record field and also in the
                        <codeph>sdc.operation.type</codeph> record header attribute. </dd>
                <dd>The Type field contains one of the following string values: INSERT, DELETE, or
                    UPDATE.</dd>
                <dd>The <codeph>sdc.operation.type</codeph> record header attribute contains one of
                    the following numeric values:<ul id="ul_dkt_g5l_dy">
                        <li>1 - insert data</li>
                        <li>2 - delete data</li>
                        <li>3 - update data</li>
                    </ul></dd>
                <dd>You can use either the Type record field or the record header attribute when the
                    pipeline writes the record to the destination system. For example, the Kudu
                    destination by default reads the value of the
                        <codeph>sdc.operation.type</codeph> record header attribute to determine the
                    operation to perform. If your MySQL Binary Log pipeline writes to a Kudu
                    destination, the destination automatically reads the operation from the record
                    header attribute. </dd>
            </dlentry>
            <dlentry>
                <dt>Change data capture information</dt>
                <dd>The change data capture information is stored in the following record fields:
                        <ul id="ul_t5r_r5l_dy">
                        <li>BinLogFilename - when GTID is disabled</li>
                        <li>BinLogPosition- when GTID is disabled</li>
                        <li>SeqNo - when GTID is enabled</li>
                        <li>GTID - when GTID is enabled</li>
                        <li>Table</li>
                        <li>ServerId</li>
                        <li>Database</li>
                        <li>Timestamp</li>
                        <li>Offset</li>
                    </ul></dd>
            </dlentry>
            <dlentry>
                <dt>Changed data</dt>
                <dd>
                    <p>The data to be inserted, deleted, or updated is stored in the root Data map
                        field. Each column of changed data is another field within the root
                        field.</p>
                </dd>
            </dlentry>
        </dl>
        <p>For example, the origin generates the following record when it reads from binary log
            files for a MySQL server with GTID enabled:</p>
        <p><image href="../Graphics/MySQLBinaryLog-Record.png" scale="70" id="image_hvd_b24_2y"
            /></p>
 </conbody>
</concept>
