<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_sjr_nrx_4x">
 <title>Event Handling Streams</title>
 <conbody>
        <p>You can add event handling to any pipeline where the event handling logic suits your
            needs. When configuring the event branch, you can add additional stages as needed, but
            do not merge the event handling stream with a data stream. <dl>
                <dlentry>
                    <dt>Example: Task execution</dt>
                    <dd>You have a pipeline that reads from Kafka and writes files to HDFS:</dd>
                    <dd><image href="../Graphics/Event-ParquetBasicPipe.png" scale="70"
                            id="image_tb3_g34_lx"/></dd>
                    <dd>When Hadoop FS closes a file, you would like the file moved to a different
                        directory and the file permissions changed to read-only. </dd>
                    <dd>Leaving the rest of the pipeline as is, you can enable event handling in the
                        Hadoop FS destination. connect it to the HDFS File Metadata executor, and
                        configure the HDFS File Metadata executor to move the file and change its
                        permissions:</dd>
                    <dd><image href="../Graphics/Event-EventPipe.png" scale="70"
                            id="image_uww_vrx_4x"/></dd>
                </dlentry>
                <dlentry>
                    <dt>Example: Event storage</dt>
                    <dd><draft-comment author="Loretta">Change this example?</draft-comment>You have
                        a pipeline that uses the File Tail origin to process weblogs:</dd>
                    <dd><image href="../Graphics/Event-FileTail.png" id="image_wgk_wgd_px"
                            scale="60"/></dd>
                    <dd>For auditing purposes, you'd like to track the files that are being
                        processed and write that information to a database table. </dd>
                    <dd>Leaving the rest of the pipeline as is, you can enable event handling for
                        the File Tail origin and simply connect it to the JDBC Producer as
                        follows:</dd>
                    <dd><image href="../Graphics/Event-FileTail-JDBC.png" id="image_yx4_jhd_px"
                            scale="60"/></dd>
                    <dd>If you wanted to add information to the event record before writing it to
                        the database, you could add processors in the event stream before passing
                        the events to JDBC Producer. </dd>
                    <dd>For example, if you have multiple pipelines writing events to the same
                        location, you add an Expression Evaluator as follows to include the pipeline
                        name in the event record:</dd>
                    <dd><image href="../Graphics/Event-FileTail-ExpJDBC.png" id="image_a5p_rwd_px"
                            scale="60"/></dd>
                </dlentry>
            </dl></p>
 </conbody>
</concept>
