<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA General Task//EN" "generalTask.dtd">
<task id="task_br5_rzq_ks">
    <title>Route Data with the Stream Selector</title>
    <shortdesc>To route records credit card transactions to a separate branch for processing, we use
        the Stream Selector processor. We'll also define a required field to drop records with no
        payment type. </shortdesc>
    <taskbody>
        <context><p>When you defined a required field, a record must include data for the specified
                field to enter the stage. Records that don't meet the requirement are sent to the
                pipeline for error handling. If you configured the pipeline to write to file, that's
                where the error records go. </p><p>The Stream Selector uses user-defined conditions
                to route data. Any data not captured by a user-defined condition routes to the
                default stream. </p>Because the data is delimited, we'll use a delimited data record
            function for the condition. The <codeph>record:dValue</codeph> function returns the
            value associated with the specified header so you don't need to know the exact index
            position of the header in the record. <p>To capture records with credit card payments,
                use the following condition:
                <codeblock>${record:dValue('payment_type') == 'CRD'}</codeblock></p><p>From this,
                you see that we enclose expressions in a dollar sign and curly brackets. And we use
                single or double quotation marks around strings. For more information about the
                expression language, see <xref
                    href="../Expression_Language/ExpressionLanguage_overview.dita#concept_p54_4kl_vq"
                />.</p></context>
        <steps id="steps_xhx_3rk_ls">
            <step>
                <cmd>In the stage library, select the <uicontrol>Stream Selector</uicontrol>
                    processor and the Directory origin to it. Or, from the Pipeline Creation Help
                    Bar, click <menucascade>
                        <uicontrol>Select Processor to Connect</uicontrol>
                        <uicontrol>Stream Selector</uicontrol>
                    </menucascade>.</cmd>
            </step>
            <step>
                <cmd>On the <wintitle>General</wintitle> tab, click in the <uicontrol>Required
                        Fields</uicontrol> text box. </cmd>
                <info>A list of available fields displays because you've already performed data
                    preview. It also displays when the pipeline is valid for data preview. </info>
            </step>
            <step>
                <cmd>To discard records with no payment type information, select the following
                    field: <uicontrol>[3]/value</uicontrol>.</cmd>
                <info>If a list does not appear, you can manually enter the field path:
                    [3]/value.</info>
            </step>
            <step>
                <cmd>To configure the Stream Selector condition, click the
                        <uicontrol>Conditions</uicontrol> tab.</cmd>
                <info>A condition for the default stream displays. The default stream represents any
                    records not captured by other conditions.</info>
            </step>
            <step>
                <cmd>Click the <uicontrol>Add</uicontrol> icon.</cmd>
                <info>A condition text box displays in the Property panel, and the corresponding
                    output location appears on the stage in the canvas.</info>
            </step>
            <step>
                <cmd>Enter the following condition to capture records where a credit card is used
                    for payment:</cmd>
                <info>
                    <codeblock>${record:dValue('payment_type') == 'CRD'}</codeblock>
                </info>
                <info>You can copy and paste the expression, but try typing in the expression to see
                    how the expression completion feature helps select the function and ensure valid
                    syntax.</info>
                <info>All records that match this condition pass to the first output stream. All
                    other records are captured by the default condition and passed through the
                    second output stream.</info>
            </step>
        </steps>
        <result>The Stream Selector should look like this:<p><image
                    href="../Graphics/Tutorial-StreamSelector.png" id="image_t1s_png_4s" scale="80"
                /></p></result>
    </taskbody>
</task>
